# Generated by Django 2.0.3 on 2018-12-24 05:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Admin Area name')),
                ('abbrev', models.CharField(blank=True, max_length=3, null=True, verbose_name='Postal Abbreviation')),
                ('active', models.BooleanField(default=True, verbose_name='Area is active')),
            ],
            options={
                'verbose_name': 'Administrative Area',
                'verbose_name_plural': 'Administrative Areas',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='AdminSubarea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Admin Sub-area name')),
                ('abbrev', models.CharField(blank=True, max_length=3, null=True, verbose_name='Postal Abbreviation')),
                ('active', models.BooleanField(default=True, verbose_name='Area is active')),
                ('admin_subarea_type', models.CharField(blank=True, choices=[('a', 'Another'), ('i', 'Island'), ('ar', 'Arrondissement'), ('at', 'Atoll'), ('ai', 'Autonomous island'), ('ca', 'Canton'), ('cm', 'Commune'), ('co', 'County'), ('dp', 'Department'), ('de', 'Dependency'), ('dt', 'District'), ('dv', 'Division'), ('em', 'Emirate'), ('gv', 'Governorate'), ('ic', 'Island council'), ('ig', 'Island group'), ('ir', 'Island region'), ('kd', 'Kingdom'), ('mu', 'Municipality'), ('pa', 'Parish'), ('pf', 'Prefecture'), ('pr', 'Province'), ('rg', 'Region'), ('rp', 'Republic'), ('sh', 'Sheading'), ('st', 'State'), ('sd', 'Subdivision'), ('sj', 'Subject'), ('ty', 'Territory')], max_length=2, null=True, verbose_name='Administrative Sub-area')),
            ],
            options={
                'verbose_name': 'Administrative Sub-area',
                'verbose_name_plural': 'Administrative Sub-areas',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso2_code', models.CharField(max_length=2, unique=True, verbose_name='ISO alpha-2')),
                ('name', models.CharField(max_length=128, verbose_name='Official name (CAPS)')),
                ('printable_name', models.CharField(max_length=128, verbose_name='Country name')),
                ('iso3_code', models.CharField(max_length=3, unique=True, verbose_name='ISO alpha-3')),
                ('numcode', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ISO numeric')),
                ('active', models.BooleanField(default=True, verbose_name='Country is active')),
                ('continent', models.CharField(choices=[('AF', 'Africa'), ('NA', 'North America'), ('EU', 'Europe'), ('AS', 'Asia'), ('OC', 'Oceania'), ('SA', 'South America'), ('AN', 'Antarctica')], max_length=2, verbose_name='Continent')),
                ('admin_area', models.CharField(blank=True, choices=[('a', 'Another'), ('i', 'Island'), ('ar', 'Arrondissement'), ('at', 'Atoll'), ('ai', 'Autonomous island'), ('ca', 'Canton'), ('cm', 'Commune'), ('co', 'County'), ('dp', 'Department'), ('de', 'Dependency'), ('dt', 'District'), ('dv', 'Division'), ('em', 'Emirate'), ('gv', 'Governorate'), ('ic', 'Island council'), ('ig', 'Island group'), ('ir', 'Island region'), ('kd', 'Kingdom'), ('mu', 'Municipality'), ('pa', 'Parish'), ('pf', 'Prefecture'), ('pr', 'Province'), ('rg', 'Region'), ('rp', 'Republic'), ('sh', 'Sheading'), ('st', 'State'), ('sd', 'Subdivision'), ('sj', 'Subject'), ('ty', 'Territory')], max_length=2, null=True, verbose_name='Administrative Area')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Currency')),
                ('alphabetic_code', models.CharField(blank=True, max_length=3, null=True, verbose_name='Alphabetic Code')),
                ('numeric_code', models.IntegerField(null=True, verbose_name='Numeric Code')),
                ('minor_unit', models.IntegerField(null=True, verbose_name='Minor Unit')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.Country')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
                'ordering': ['section__title', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', sorl.thumbnail.fields.ImageField(upload_to='images', verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='active')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated')),
                ('posted', models.DateTimeField(auto_now_add=True, verbose_name='posted')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.Group', verbose_name='group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Contact phone')),
                ('receive_news', models.BooleanField(db_index=True, default=True, verbose_name='receive news')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('adminsubarea_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_classified.AdminSubarea')),
                ('slug', models.SlugField()),
                ('title', models.CharField(max_length=100, verbose_name='title')),
            ],
            options={
                'verbose_name': 'area',
                'verbose_name_plural': 'areas',
            },
            bases=('django_classified.adminsubarea',),
        ),
        migrations.AddField(
            model_name='image',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.Item'),
        ),
        migrations.AddField(
            model_name='group',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.Section', verbose_name='section'),
        ),
        migrations.AddField(
            model_name='adminsubarea',
            name='admin_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.AdminArea'),
        ),
        migrations.AddField(
            model_name='adminarea',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='django_classified.Country'),
        ),
        migrations.AddField(
            model_name='item',
            name='area',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='django_classified.Area', verbose_name='area'),
        ),
        migrations.AlterUniqueTogether(
            name='currency',
            unique_together={('country', 'currency')},
        ),
    ]
